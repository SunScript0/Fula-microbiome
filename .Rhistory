mutate(TimePoint = paste0("T", TimePoint)) %>%
filter(type == "in_group") %>%
ggplot(., aes(x=Location.x, y=value))+
geom_boxplot()+
labs(y="Mother-child distances")+
stat_compare_means()+
ylim(c(0,1.2))
}
##### BETA DIVERSITY: adonis infants #####
samples_to_keep = rownames(filter(meta, AdultChild == "Child"))
adonis_data = list()
adonis_data$bray = prep_for_adonis(beta$bray, meta, samples_to_keep, c("Gender", "AgeC", "AgeM", "FirstMeal", "SinceDivers.", "BMI"))
adonis_data$aitch = prep_for_adonis(beta$aitch, meta, samples_to_keep, c("Gender", "AgeC", "AgeM", "FirstMeal", "SinceDivers.", "BMI"))
adonis_data$unifracU = prep_for_adonis(beta$unifracU, meta, samples_to_keep, c("Gender", "AgeC", "AgeM", "FirstMeal", "SinceDivers.", "BMI"))
adonis_data$unifracW = prep_for_adonis(beta$unifracW, meta, samples_to_keep, c("Gender", "AgeC", "AgeM", "FirstMeal", "SinceDivers.", "BMI"))
nperms = 2000
set.seed(1337)
# Just location
adonis2(as.dist(adonis_data$bray[[1]]) ~ Location,
data = adonis_data$bray[[2]],
by = "terms",
permutations = nperms)
adonis2(as.dist(adonis_data$aitch[[1]]) ~ Location,
data = adonis_data$aitch[[2]],
by = "terms",
permutations = nperms)
adonis2(as.dist(adonis_data$unifracU[[1]]) ~ Location,
data = adonis_data$unifracU[[2]],
by = "terms",
permutations = nperms)
adonis2(as.dist(adonis_data$unifracW[[1]]) ~ Location,
data = adonis_data$unifracW[[2]],
by = "terms",
permutations = nperms)
# Bray-Curtis with location + more variables
plots$beta_ado$chi_bray_loc =
adonis2(as.dist(adonis_data$bray[[1]]) ~ Location+AgeC+Gender+BMI,
data = adonis_data$bray[[2]],
by = "margin",
permutations = nperms) %>%
slice(1:(n()-2)) %>%
arrange(-R2) %>%
rownames_to_column(var="Variable") %>%
mutate(Variable = fct_reorder(Variable, R2)) %>%
mutate(Sig = stars.pval(`Pr(>F)`)) %>%
ggplot(., aes(x=Variable, y=R2))+
geom_bar(stat = "identity", width=0.8) +
geom_text(aes(label = Sig, y = R2*1.1), size=6, vjust=0.7, hjust=0) +
coord_flip()+
scale_x_discrete(labels = c("Location"="Environment", "AgeC" = "Age"))+
scale_y_continuous(expand=expansion(mult=c(0, 0.15)))+
ggtitle("Bray-Curtis")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank())
# Aitchison with location + more variables
plots$beta_ado$chi_aitch_loc =
adonis2(as.dist(adonis_data$aitch[[1]]) ~ Location+AgeC+Gender+BMI,
data = adonis_data$aitch[[2]],
by = "margin",
permutations = nperms) %>%
slice(1:(n()-2)) %>%
arrange(-R2) %>%
rownames_to_column(var="Variable") %>%
mutate(Variable = fct_reorder(Variable, R2)) %>%
mutate(Sig = stars.pval(`Pr(>F)`)) %>%
ggplot(., aes(x=Variable, y=R2))+
geom_bar(stat = "identity", width=0.7) +
geom_text(aes(label = Sig, y = R2*1.1), size=6, vjust=0.7, hjust=0) +
coord_flip()+
scale_x_discrete(labels = c("Location"="Environment", "AgeC" = "Age"))+
scale_y_continuous(expand=expansion(mult=c(0, 0.15)))+
ggtitle("Aitchison")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank())
# UniFracU with location + more variables
plots$beta_ado$chi_uniU_loc =
adonis2(as.dist(adonis_data$unifracU[[1]]) ~ Location+AgeC+Gender+BMI,
data = adonis_data$unifracU[[2]],
by = "margin",
permutations = nperms) %>%
slice(1:(n()-2)) %>%
arrange(-R2) %>%
rownames_to_column(var="Variable") %>%
mutate(Variable = fct_reorder(Variable, R2)) %>%
mutate(Sig = stars.pval(`Pr(>F)`)) %>%
ggplot(., aes(x=Variable, y=R2))+
geom_bar(stat = "identity", width=0.8) +
geom_text(aes(label = Sig, y = R2*1.1), size=6, vjust=0.7, hjust=0) +
coord_flip()+
scale_x_discrete(labels = c("Location"="Environment", "AgeC" = "Age"))+
scale_y_continuous(expand=expansion(mult=c(0, 0.15)))+
ggtitle("UniFracU")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank())
# UniFracW with location + more variables
plots$beta_ado$chi_uniW_loc =
adonis2(as.dist(adonis_data$unifracW[[1]]) ~ Location+AgeC+Gender+BMI,
data = adonis_data$unifracW[[2]],
by = "margin",
permutations = nperms) %>%
slice(1:(n()-2)) %>%
arrange(-R2) %>%
rownames_to_column(var="Variable") %>%
mutate(Variable = fct_reorder(Variable, R2)) %>%
mutate(Sig = stars.pval(`Pr(>F)`)) %>%
ggplot(., aes(x=Variable, y=R2))+
geom_bar(stat = "identity", width=0.7) +
geom_text(aes(label = Sig, y = R2*1.1), size=6, vjust=0.7, hjust=0) +
coord_flip()+
scale_x_discrete(labels = c("Location"="Environment", "AgeC" = "Age"))+
scale_y_continuous(expand=expansion(mult=c(0, 0.15)))+
ggtitle("UniFracW")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank())
##### BETA DIVERSITY: adonis infants T2 only #####
samples_to_keep = rownames(filter(meta, Group4 == "Child.2"))
adonis_data = list()
adonis_data$bray = prep_for_adonis(beta$bray, meta, samples_to_keep, c("Gender", "AgeC", "AgeM", "FirstMeal", "SinceDivers.", "BMI", "IngredN"))
adonis_data$aitch = prep_for_adonis(beta$aitch, meta, samples_to_keep, c("Gender", "AgeC", "AgeM", "FirstMeal", "SinceDivers.", "BMI", "IngredN"))
adonis_data$unifracU = prep_for_adonis(beta$unifracU, meta, samples_to_keep, c("Gender", "AgeC", "AgeM", "FirstMeal", "SinceDivers.", "BMI", "IngredN"))
adonis_data$unifracW = prep_for_adonis(beta$unifracW, meta, samples_to_keep, c("Gender", "AgeC", "AgeM", "FirstMeal", "SinceDivers.", "BMI", "IngredN"))
nperms = 1000
set.seed(1337)
# Just location
adonis2(as.dist(adonis_data$bray[[1]]) ~ Location,
data = adonis_data$bray[[2]],
by = "terms",
permutations = nperms)
adonis2(as.dist(adonis_data$aitch[[1]]) ~ Location,
data = adonis_data$aitch[[2]],
by = "terms",
permutations = nperms)
adonis2(as.dist(adonis_data$unifracU[[1]]) ~ Location,
data = adonis_data$unifracU[[2]],
by = "terms",
permutations = nperms)
adonis2(as.dist(adonis_data$unifracW[[1]]) ~ Location,
data = adonis_data$unifracW[[2]],
by = "terms",
permutations = nperms)
# Bray-Curtis with Location
plots$beta_ado$chi2_bray_loc =
adonis2(as.dist(adonis_data$bray[[1]]) ~ Location+AgeC+Gender+BMI+SharingMealAvg+IngredN,
data = adonis_data$bray[[2]],
by = "margin",
permutations = nperms) %>%
slice(1:(n()-2)) %>%
arrange(-R2) %>%
rownames_to_column(var="Variable") %>%
mutate(Variable = fct_reorder(Variable, R2)) %>%
mutate(Sig = stars.pval(`Pr(>F)`)) %>%
ggplot(., aes(x=Variable, y=R2))+
geom_bar(stat = "identity") +
geom_text(aes(label = Sig, y = R2*1.1), size=6, vjust=0.5, hjust=0) +
ylim(c(0, 0.14))+
coord_flip()+
scale_x_discrete(labels = c("SubLocation"="Area"))+
labs(x="")+
ggtitle("Bray-Curtis")+
theme(plot.title = element_text(hjust = 0.5))
# Bray-Curtis with Location
plots$beta_ado$chi2_aitch_loc =
adonis2(as.dist(adonis_data$aitch[[1]]) ~ Location+AgeC+Gender+BMI+SharingMealAvg+IngredN,
data = adonis_data$aitch[[2]],
by = "margin",
permutations = nperms) %>%
slice(1:(n()-2)) %>%
arrange(-R2) %>%
rownames_to_column(var="Variable") %>%
mutate(Variable = fct_reorder(Variable, R2)) %>%
mutate(Sig = stars.pval(`Pr(>F)`)) %>%
ggplot(., aes(x=Variable, y=R2))+
geom_bar(stat = "identity") +
geom_text(aes(label = Sig, y = R2*1.1), size=6, vjust=0.5, hjust=0) +
ylim(c(0, 0.14))+
coord_flip()+
scale_x_discrete(labels = c("SubLocation"="Area"))+
labs(x="")+
ggtitle("Bray-Curtis")+
theme(plot.title = element_text(hjust = 0.5))
# UniFracU with Location
plots$beta_ado$chi2_uniU_loc =
adonis2(as.dist(adonis_data$unifracU[[1]]) ~ Location+AgeC+Gender+BMI+SharingMealAvg+IngredN,
data = adonis_data$unifracU[[2]],
by = "margin",
permutations = nperms) %>%
slice(1:(n()-2)) %>%
arrange(-R2) %>%
rownames_to_column(var="Variable") %>%
mutate(Variable = fct_reorder(Variable, R2)) %>%
mutate(Sig = stars.pval(`Pr(>F)`)) %>%
ggplot(., aes(x=Variable, y=R2))+
geom_bar(stat = "identity") +
geom_text(aes(label = Sig, y = R2*1.1), size=6, vjust=0.5, hjust=0) +
ylim(c(0, 0.14))+
coord_flip()+
scale_x_discrete(labels = c("SubLocation"="Area"))+
labs(x="")+
ggtitle("UniFracU")+
theme(plot.title = element_text(hjust = 0.5))
# UniFracW with Location
plots$beta_ado$chi2_uniW_loc =
adonis2(as.dist(adonis_data$unifracW[[1]]) ~ Location+AgeC+Gender+BMI+SharingMealAvg+IngredN,
data = adonis_data$unifracW[[2]],
by = "margin",
permutations = nperms) %>%
slice(1:(n()-2)) %>%
arrange(-R2) %>%
rownames_to_column(var="Variable") %>%
mutate(Variable = fct_reorder(Variable, R2)) %>%
mutate(Sig = stars.pval(`Pr(>F)`)) %>%
ggplot(., aes(x=Variable, y=R2))+
geom_bar(stat = "identity") +
geom_text(aes(label = Sig, y = R2*1.1), size=6, vjust=0.5, hjust=0) +
ylim(c(0, 0.14))+
coord_flip()+
scale_x_discrete(labels = c("SubLocation"="Area"))+
labs(x="")+
ggtitle("UniFracW")+
theme(plot.title = element_text(hjust = 0.5))
##### BETA DIVERSITY: mds infants #####
point_size = 1
mds$all$bray = cmdscale(beta$bray, eig = TRUE, k = ncomps)
mds$all$aitch = cmdscale(beta$aitch, eig = TRUE, k = ncomps)
mds$all$unifracU = cmdscale(beta$unifracU, eig = TRUE, k = ncomps)
mds$all$unifracW = cmdscale(beta$unifracW, eig = TRUE, k = ncomps)
for (type in c("bray", "aitch", "unifracU", "unifracW")) {
mds_points$all[[type]] = as.data.frame(mds$all[[type]]$points)
colnames(mds_points$all[[type]]) = paste0("PC", 1:ncol(mds_points$all[[type]]))
mds_points$all[[type]] = merge(mds_points$all[[type]], meta, by = 0)
rownames(mds_points$all[[type]]) = mds_points$all[[type]]$Row.names
mds_points$all[[type]] = mds_points$all[[type]][,-c(1)]
}
# Bray
ggplot(mds_points$all$bray, aes(x=PC1, y=PC2, color=Group4))+
geom_point(size=point_size)+
stat_ellipse(level = 0.68)
# Aitchison
ggplot(mds_points$all$aitch, aes(x=PC1, y=PC2, color=Group4))+
geom_point(size=point_size)+
stat_ellipse(level = 0.68)
# UnifracU
ggplot(mds_points$all$unifracU, aes(x=PC1, y=PC2, color=Group4))+
geom_point(size=point_size)+
stat_ellipse(level = 0.68)
# UnifracW
ggplot(mds_points$all$unifracW, aes(x=PC1, y=PC2, color=Group4))+
geom_point(size=point_size)+
stat_ellipse(level = 0.68)
plots$beta$adu_chi_pcoa = ellipse_and_centroid(mds_points$all$bray, "PC1", "PC2", "Group4", F,
point_size = point_size, point_alpha = 0.5)+
scale_color_manual(values=cols$times,
labels=c("Mothers T1", "Infants T1", "Mothers T2", "Infants T2"),
name=NULL)+
theme(legend.position = "left")
# ellipse_and_centroid(mds_points$all$aitch, "PC1", "PC2", "Group4", F,
#                                                point_size = point_size, point_alpha = 0.5)+
#   scale_color_manual(values=cols$times,
#                      labels=c("Mothers T1", "Infants T1", "Mothers T2", "Infants T2"),
#                      name=NULL)+
#   theme(legend.position = "left")
# Infants only MDS
samples_to_keep = rownames(filter(meta, AdultChild == "Child"))
mds$infants = list()
mds$infants$bray = cmdscale(beta$bray[samples_to_keep, samples_to_keep], eig = TRUE, k = ncomps)
mds$infants$aitch = cmdscale(beta$aitch[samples_to_keep, samples_to_keep], eig = TRUE, k = ncomps)
mds$infants$unifracU = cmdscale(beta$unifracU[samples_to_keep, samples_to_keep], eig = TRUE, k = ncomps)
mds$infants$unifracW = cmdscale(beta$unifracW[samples_to_keep, samples_to_keep], eig = TRUE, k = ncomps)
mds_points$infants = list()
for (type in names(mds$infants )) {
mds_points$infants[[type]] = as.data.frame(mds$infants[[type]]$points)
colnames(mds_points$infants[[type]]) = paste0("PC", 1:ncol(mds_points$infants[[type]]))
mds_points$infants[[type]] = merge(mds_points$infants[[type]], meta, by = 0)
rownames(mds_points$infants[[type]]) = mds_points$infants[[type]]$Row.names
mds_points$infants[[type]] = mds_points$infants[[type]][,-c(1)]
}
plots$beta$chi_pcoa = ellipse_and_centroid(mds_points$infants$bray, "PC1", "PC2", "Group3", F,
point_size = point_size, point_alpha = 0.5)+
scale_color_manual(values=cols$infants,
labels=c("Rural\ninfants T1", "Urban\ninfants T1", "Rural\ninfants T2", "Urban\ninfants T2"),
name=NULL)
ellipse_and_centroid(mds_points$infants$aitch, "PC1", "PC2", "Group3", F,
point_size = point_size, point_alpha = 0.5)+
scale_color_manual(values=cols$infants,
labels=c("Rural\ninfants T1", "Urban\ninfants T1", "Rural\ninfants T2", "Urban\ninfants T2"),
name=NULL)
##### DIFFERENTIAL ABUNDANCE: consider sparsity #####
sparsity_hists = list()
for (level in c("asv", "spe", "gen", "phy")) {
sparsity_hists[[level]] = ab[[level]] %>%
summarize_all(function(x) sum(x == 0)) %>%
t() %>%
as.data.frame() %>%
ggplot(., aes(x=V1))+
geom_histogram(binwidth = 5) +
ggtitle(level) +
xlab("N of samples with zero abundance")
}
plots$extra$sparsity = ggarrange(plotlist = sparsity_hists, ncol = 1, nrow = 4)
taxa$gen_defined = taxa$gen %>%
filter(Genus != "__") %>%
filter(!grepl("uncultured", String))
nonzeros_per_group = ab$gen %>%
dplyr::select(rownames(taxa$gen_defined)) %>%
merge(meta, by="row.names") %>%
group_by(Group3) %>%
summarize(across(starts_with("gen", ignore.case=F), function(x) sum(x != 0))) %>%
as.data.frame()
rownames(nonzeros_per_group) = nonzeros_per_group$Group3
nonzeros_per_group = nonzeros_per_group[,-c(1)]
taxa$gen_less_sparse = taxa$gen_defined[colnames(nonzeros_per_group)[which(colSums(nonzeros_per_group >= 5) > 0)], ]
ab$gen_less_sparse = ab$gen[, rownames(taxa$gen_less_sparse)]
plots$extra$sparsity_kept_counts =  data.frame("X1" = rowSums(ab$gen_less_sparse) / rowSums(ab$gen)) %>%
ggplot(., aes(x=X1))+
geom_histogram(aes(y=cumsum(..count..)/nrow(ab$gen)))
print(paste("Before filtering:", nrow(taxa$gen), "| After filtering:", nrow(taxa$gen_less_sparse)))
print(paste("Removed taxa account for: ", mean(100 - 100*rowSums(ab$gen_less_sparse) / rowSums(ab$gen)), "on average"))
##### DIFFERENTIAL ABUNDANCE: maaslin adults #####
plots$maaslin = list()
dir.create(paste0(outpath, "/maaslin"))
ab_mothers = ab$gen_less_sparse %>%
filter(rownames(.) %in% rownames(subset(meta, AdultChild == "Adult")))
colnames(ab_mothers) = str_replace_all(taxa$gen_less_sparse[colnames(ab_mothers), "Genus"], "g__", "")
meta$Index = as.factor(meta$Index)
maaslin_mothers = Maaslin2(ab_mothers, meta, paste0(outpath, "/maaslin/mothers"),
fixed_effects = c("Location", "AgeC", "EntColi"),
random_effects = c("Index", "TimePoint"),
max_significance = 0.1,
min_prevalence = 0,
analysis_method = "LM",  # Default: LM
normalization = "TSS",   # Default: TSS
transform = "LOG")      # Default: LOG
res = data.frame(maaslin_mothers$results) %>%
filter(qval < 0.1) %>%
mutate(feature = fct_reorder(feature, qval, min)) %>%
mutate(logq = -sign(coef)*log(qval))
plots$maaslin$adults = ggplot(res, aes(x=feature, y=value, fill=logq, size=abs(coef)))+
geom_point(pch=21) +
scale_fill_gradient2(low="blue", mid="light grey", high="red", limits = c(-max(abs(res$logq)), max(abs(res$logq)))) +
scale_size(breaks = c(0.25, 0.5, 0.75, 1))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.direction="horizontal",
legend.position = "top",
legend.key.height = unit(2, "mm"))+
labs(x=NULL, y=NULL)+
scale_y_discrete(labels=c("TRUE"="EntColi+", "AgeC" = "TsincePreg."))
##### DIFFERENTIAL ABUNDANCE: maaslin infants #####
ab_infants = ab$gen_less_sparse %>%
filter(rownames(.) %in% rownames(subset(meta, AdultChild == "Child")))
colnames(ab_infants) = str_replace_all(taxa$gen_less_sparse[colnames(ab_infants), "Genus"], "g__", "")
meta["UrbanAgeC"] = (meta$Location == "Urban") * meta$AgeC
maaslin_infants = Maaslin2(ab_infants, meta, paste0(outpath, "/maaslin/infants"),
fixed_effects = c("Location", "AgeC", "UrbanAgeC"),
random_effects = c("Index", "TimePoint"),
max_significance = 0.1,
min_prevalence = 0,
analysis_method = "LM",  # Default: LM
normalization = "TSS",   # Default: TSS
transform = "LOG")      # Default: LOG
# It seems the differences in microbiome between urban and rural and in how their
# microbiome develops over time depends on the acquisition of rare species mostly
# because alpha diversity grows faster in rural children but very few taxa
# have abundance associated with rural/urban or rural/urban*age
res = data.frame(maaslin_infants$results) %>%
filter(qval < 0.1) %>%
mutate(feature = fct_reorder(feature, qval, min)) %>%
mutate(logq = -sign(coef)*log(qval))
plots$maaslin$infants =
ggplot(res, aes(x=feature, y=value, fill=logq, size=abs(coef)))+
geom_point(pch=21) +
scale_fill_gradient2(low="blue", mid="light grey", high="red", limits = c(-max(abs(res$logq)), max(abs(res$logq)))) +
scale_size(breaks = c(0.2, 0.38, 0.58, 0.7))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
legend.direction="horizontal",
legend.position = "top",
legend.key.height = unit(2, "mm"))+
labs(x=NULL, y=NULL)+
scale_y_discrete(labels = c("AgeC" = "Age", "UrbanAgeC" = "Urban*Age"))
##### DIFFERENTIAL ABUNDANCE: all genera for supplementary #####
ab_mothers = ab$gen %>%
dplyr::select(rownames(taxa$gen_defined)) %>%
dplyr::filter(rownames(.) %in% rownames(subset(meta, AdultChild == "Adult")))
colnames(ab_mothers) = str_replace_all(taxa$gen_defined[colnames(ab_mothers), "Genus"], "g__", "")
meta$Index = as.factor(meta$Index)
maaslin_mothers = Maaslin2(ab_mothers, meta, paste0(outpath, "/maaslin/mothers_all"),
fixed_effects = c("Location", "AgeC", "EntColi"),
random_effects = c("Index", "TimePoint"),
max_significance = 0.1,
min_prevalence = 0,
analysis_method = "LM",  # Default: LM
normalization = "TSS",   # Default: TSS
transform = "LOG", # Default: LOG
plot_scatter = F)
ab_infants = ab$gen %>%
dplyr::select(rownames(taxa$gen_defined)) %>%
filter(rownames(.) %in% rownames(subset(meta, AdultChild == "Child")))
colnames(ab_infants) = str_replace_all(taxa$gen_defined[colnames(ab_infants), "Genus"], "g__", "")
meta["UrbanAgeC"] = (meta$Location == "Urban") * meta$AgeC
maaslin_infants = Maaslin2(ab_infants, meta, paste0(outpath, "/maaslin/infants_all"),
fixed_effects = c("Location", "AgeC", "UrbanAgeC"),
random_effects = c("Index", "TimePoint"),
max_significance = 0.1,
min_prevalence = 0,
analysis_method = "LM",  # Default: LM
normalization = "TSS",   # Default: TSS
transform = "LOG", # Default: LOG
plot_scatter = F)
##### PLOTTING #####
w = 174 # mm
h = 230
dir.create(paste0(outpath, "/extras"))
# Figure S1
p1 = (plots$qc$coverage | plots$qc$raref_gen)
p2 = (plots$qc$raref_spe | plots$qc$raref_asv)
p3 = (plots$beta$all_pcoa | guide_area() + plot_layout(guides = 'collect')) + plot_layout(widths = c(2, 1))
figS1 = p1 / p2 / p3 + plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = "bold", size=14))
ggsave(paste0(outpath, "/figS1.pdf"), plot=figS1,
width = w, height = h*0.7, units = "mm", dpi = 300)
# Figure 1 phylum plots
ggsave(paste0(outpath, "/fig1.pdf"), plot = plots$phy_barplots$combined,
width = w, height = h*0.35, units = "mm", dpi = 300)
# Alpha div metric comparison
ggsave(paste0(outpath, "/extras/alpha_div_metric_comparison.pdf"), plot=plots$alpha$metric_comp,
width = w, height = 0.8*h, units = "mm", dpi = 300)
# All alpha div metrics, comparing environment
figS2 = ggarrange(plotlist = plots$alpha[c(
"adults_chao", "infants_chao",
"adults_shan", "infants_shan",
"adults_PD", "infants_PD")],
nrow=3, ncol=2, labels = "AUTO")
ggsave(paste0(outpath, "/figS2.pdf"), plot = figS2,
width = w, height = 0.8*h, units = "mm", dpi = 300)
# All alpha div metrics comparing timepoints
alpha_div_all_metrics_time = ggarrange(plotlist = plots$alpha[c(
"adults_chao_time", "infants_chao_time",
"adults_shan_time", "infants_shan_time",
"adults_PD_time", "infants_PD_time")],
nrow=3, ncol=2, labels = "AUTO")
ggsave(paste0(outpath, "/extras/alpha_div_all_metrics_time.pdf"), plot = alpha_div_all_metrics_time,
width = w, height = 0.8*h, units = "mm", dpi = 300)
# Time variables vs diversity
alpha_time_vars =
ggarrange(plots$alpha_reg$time_since_preg, plots$alpha_reg$time_child_age, plots$alpha_reg$time_since_divers,
common.legend = T, ncol=3)
ggsave(paste0(outpath, "/extras/alpha_time_vars.pdf"), plot = alpha_time_vars,
width = w, height = h*0.25, units = "mm", dpi = 300)
# Ability of beta div metrics to discriminate between various groups
beta_grouping_hists = ggarrange(
annotate_figure(plots$beta$hists_AdultChild, top = text_grob("Group = Adult/Child", face = "bold", size = 14)),
annotate_figure(plots$beta$hists_individuals_adults, top = text_grob("Group = individuals (adults)", face = "bold", size = 14)),
annotate_figure(plots$beta$hists_individuals_children, top = text_grob("Group = individuals (infants)", face = "bold", size = 14)),
ncol=3, common.legend = T)
ggsave(paste0(outpath, "/extras/beta_grouping_hists.pdf"), plot = beta_grouping_hists,
width = w*1.5, height = h, units = "mm", dpi = 300)
# All adonis barplots
# figS3 = ggarrange(plots$beta_ado$adu_bray_loc, plots$beta_ado$adu_uniU_loc, plots$beta_ado$adu_uniW_loc,
#                   plots$beta_ado$chi_bray_loc, plots$beta_ado$chi_uniU_loc, plots$beta_ado$chi_uniW_loc,
#                   ncol=3, nrow=2, labels = "AUTO")
figS3 = ggarrange(plots$beta_ado$adu_bray_loc, plots$beta_ado$chi_bray_loc,
plots$beta_ado$adu_aitch_loc, plots$beta_ado$chi_aitch_loc,
plots$beta_ado$adu_uniU_loc, plots$beta_ado$chi_uniU_loc,
plots$beta_ado$adu_uniW_loc, plots$beta_ado$chi_uniW_loc,
ncol=2, nrow=4, labels = "AUTO")
ggsave(paste0(outpath, "/figS3.pdf"), plot = figS3,
width = 0.9*w, height = h*0.6, units = "mm", dpi = 300)
in_group_plots = ggarrange(plots$beta_extra$in_group_bray, plots$beta_extra$in_group_unifracU, plots$beta_extra$in_group_unifracW,
nrow = 3)
ggsave(paste0(outpath, "/extras/in_group_plots.pdf"), plot = in_group_plots,
width = w, height = h*0.8, units = "mm", dpi = 300)
# Mother-Child distance violin plots
p1 = plots$beta_extra$adu_child_dist_bray + ggtitle("Adult-infant distances vs environment")
p2 = plots$beta_extra$relatedness_effect_bray + ggtitle("Adult-infant distances vs relatedness")
figS4 = (p1 | p2) /
(plots$beta_extra$adu_child_dist_aitch+ylim(10,45) | plots$beta_extra$relatedness_effect_aitch+ylim(10,45)) /
(plots$beta_extra$adu_child_dist_unifracU | plots$beta_extra$relatedness_effect_unifracU) /
(plots$beta_extra$adu_child_dist_unifracW |plots$beta_extra$relatedness_effect_unifracW) +
plot_annotation(tag_levels = 'A') + plot_layout(guides = "collect")&
theme(plot.tag = element_text(face = "bold", size=14),
plot.margin = margin(0, 10, 0, 0, "pt"))
ggsave(paste0(outpath, "/figS4.pdf"), plot = figS4,
width = w, height = h*0.8, units = "mm", dpi = 300)
# Main figure mothers
alignedT = align_plots(plots$alpha$adults_chao,
(plots$beta_ado$adu_aitch_loc+scale_y_continuous(expand = expansion(mult=c(0, 0.2)))),
align = "h", axis = "t")
alignedB = align_plots(plots$alpha_reg$ent_coli, plots$beta$ent_coli_pcoa, align = "h", axis = "b")
alignedL = align_plots(alignedT[[1]], plots$alpha_reg$time_since_preg, alignedB[[1]], plots$maaslin$adults,
align = "v", axis = "l")
alignedR = align_plots(alignedT[[2]], alignedB[[2]], alignedL[[4]],
align = "v", axis = "r")
left = plot_grid(plotlist = alignedL[1:3], nrow=3, align="v", axis="lr", rel_heights = c(1.4,1,1.2),
labels = c("A", "B", "C"))
right = plot_grid(plotlist = alignedR[1:2], nrow=2, align="v", axis="lr", labels= c("D", "E"))
top = plot_grid(left, right, ncol=2)
full = plot_grid(top, alignedR[[3]], nrow = 2, rel_heights = c(1.9, 1), labels=c("", "F"))
ggsave(paste0(outpath, "/fig2.pdf"), plot = full,
height = 0.8*h, width = w, units="mm", dpi = 300)
# Main figure infants
tmp = plots$beta_extra$adu_child_dist_unifracW +
ggtitle("Adult-infant distances")+
ylim(0, 1.1)
alignedT = align_plots(plots$alpha$infants_chao, plots$beta_ado$chi_aitch_loc, align = "h", axis = "tb")
alignedB = align_plots(plots$beta$adu_chi_pcoa, tmp, align = "h", axis = "b")
alignedL = align_plots(alignedT[[1]], alignedB[[1]], plots$maaslin$infants, align = "v", axis = "l")
alignedR = align_plots(alignedT[[2]], alignedB[[2]], alignedL[[3]], align = "v", axis = "r")
left = plot_grid(plotlist = alignedL[1:2], nrow=2, align="v", axis="lr", rel_heights = c(1,1),
labels = c("A", "C"))
right = plot_grid(plotlist = alignedR[1:2], nrow=2, align="v", axis="lr", labels= c("B", "D"))
top = plot_grid(left, right, ncol=2, rel_widths = c(1.3, 1))
full = plot_grid(top, alignedR[[3]], nrow = 2, rel_heights = c(1.5, 1), labels=c("", "E"))
ggsave(paste0(outpath, "/fig3.pdf"), plot = full,
height = 0.8*h, width = w, units="mm", dpi = 300)
